{
  "alias": "card_sparkline_v1",
  "name": "Card-Sparkline-V1",
  "descriptor": {
    "type": "timeseries",
    "sizeX": 8.5,
    "sizeY": 2.5,
    "resources": [
      {
        "url": "https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"
      }
    ],
    "templateHtml": "<div id='tbDatasource0' class='my-card' layout=\"column\">\n    <div class=\"container\" id='valueCell' ng-style=\"{color: textColor}\">\n        --\n    </div>\n    <div class=\"container container-chart\" ng-style=\"{width: sparklineWidth}\">\n        <canvas id=\"mychart\" class=\"chart\"></canvas>\n    </div>\n</div>\n",
    "templateCss": ".my-card {\n    width: 100%;\n    height: 100%;\n    margin: auto;\n    display: table;\n    table-layout: fixed;\n}\n\n.my-card .container {\n    display: table-cell;\n    vertical-align: middle;  \n    text-align: center; \n    font-family:Roboto, \"Helvetica Neue\", sans-serif;\n    font-size: 50px;\n    font-weight: 100;\n    white-space: nowrap;\n}\n\n.my-card .chart {\n    width: 100%\n}\n",
    "controllerScript": "\n\nfunction getAndFormatLastTsValue(data, ctx) {\n    function isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n    if(data.data.length === 0) {\n        return \"-\";\n    }\n    \n    var value = data.data[data.data.length - 1][1];\n    var txtValue;\n    if (isNumber(value)) {\n        var decimals = ctx.decimals;\n        var units = ctx.units;\n        if (data.dataKey.decimals || data.dataKey.decimals === 0) {\n            decimals = data.dataKey.decimals;\n        }\n        if (data.dataKey.units) {\n            units = data.dataKey.units;\n        }\n        txtValue = self.ctx.utils.formatValue(value, decimals, units, true);\n    } else {\n        txtValue = value;\n    }\n    return txtValue;\n}\n\n\n\n\nself.onInit = function() {\n    if(self.ctx.data.length === 0) {\n        return;\n    }\n\n\n    /* ***** Text part ****** */\n    \n    self.ctx.$scope.textColor = self.ctx.settings.textColor;\n\n    self.ctx.valueContainer = $('#valueCell', self.ctx.$container);\n\n    $.fn.textWidth = function(){\n        var html_org = $(this).html();\n        var html_calc = '<span>' + html_org + '</span>';\n        $(this).html(html_calc);\n        var width = $(this).find('span:first').width();\n        $(this).html(html_org);\n        return width;\n    };    \n\n\n    /* ***** Sparkline part ****** */\n\n    self.ctx.$scope.sparklineWidth = self.ctx.settings.sparklineWidth + \"%\";\n\n    moment.locale('fr');\n    $('#mychart', self.ctx.$container).height(self.ctx.settings.sparklineHeight + \"px\");\n    self.ctx.chart = new Chart($('#mychart', self.ctx.$container), {\n        type: \"line\",\n        data: {\n            labels: [],\n            datasets: [ {\n                label: self.ctx.data[0].dataKey.label,\n                borderColor: self.ctx.settings.sparklineColor,\n                lineTension: 0,\n                borderWidth: 1,\n                fill: false,\n                data: [ ],\n            } ],\n        },\n        options: {\n            animation: false,\n            legend: {\n                display: false\n            },\n            responsive: false,\n//            maintainAspectRatio: false,\n            scales: {\n                xAxes: [{\n                    display: false,\n                    type: 'time',\n\n                }],\n                yAxes: [{\n                    display: false,\n                }],\n            },\n            elements: {\n                point: {\n                    radius: 0,\n                    borderWidth: 0,\n                    backgroundColor: 'red',\n                    borderColor: self.ctx.settings.sparklineColor,\n                }\n            },\n            layout: {\n               padding: {\n                    left: 0,\n                    right: 0,\n                    top: 5,\n                    bottom: 5,\n                }\n            },\n            tooltips: {\n                enabled: false\n            }\n        },\n    });\n\n    self.onResize();\n};\n\n\n\n\nself.onDataUpdated = function() {\n    if(self.ctx.data.length === 0) {\n        return;\n    }\n\n\n    /* ***** Sparkline part ****** */\n    \n    self.ctx.chart.data.datasets[0].data = self.ctx.data[0].data.map(v => ( { x: new Date(v[0]), y: v[1] }));\n    let minValue = Math.min(...self.ctx.data[0].data.map(v => v[1] ));\n    let maxValue = Math.max(...self.ctx.data[0].data.map(v => v[1] ));\n    self.ctx.chart.options.elements.point.radius = function(ctx) {\n        if ((ctx.dataIndex === 0) || (ctx.dataIndex === ctx.dataset.data.length - 1)) {\n            return 5;\n        }\n        if ((ctx.dataset.data[ctx.dataIndex].y == minValue) || (ctx.dataset.data[ctx.dataIndex].y == maxValue)) {\n            return 5;\n        }\n        return 0;\n    }\n    self.ctx.chart.options.elements.point.backgroundColor = function(ctx) {\n        if (ctx.dataset.data[ctx.dataIndex].y == minValue) {\n            return \"red\";\n        }\n        if (ctx.dataset.data[ctx.dataIndex].y == maxValue) {\n            return \"green\";\n        }\n        return \"black\";\n    }\n    self.ctx.chart.update();\n\n\n    /* ***** Text part ****** */\n\n    var value = getAndFormatLastTsValue(self.ctx.data[0], self.ctx);\n    self.ctx.valueContainer.html(value);\n    \n    var minDelta = 20;\n    var fontSize = self.ctx.settings.textFontSize;\n    self.ctx.valueContainer.css('font-size', fontSize+'px');\n    var delta = self.ctx.valueContainer.width() - self.ctx.valueContainer.textWidth();\n    while (delta < minDelta && fontSize > 6) {\n        fontSize--;\n        self.ctx.valueContainer.css('font-size', fontSize+'px');\n        delta = self.ctx.valueContainer.width() - self.ctx.valueContainer.textWidth();\n    }\n    \n};\n\nself.onResize = function() {\n    self.ctx.chart.resize();\n    self.onDataUpdated();\n};\n\n\nself.typeParameters = function() {\n    return {\n        maxDatasources: 1,\n        maxDataKeys: 1\n    };\n};\n\n",
    "settingsSchema": "{\n    \"schema\": {\n        \"type\": \"object\",\n        \"title\": \"Widget settings\",\n        \"properties\": {\n            \"textFontSize\": {\n                \"title\": \"Default text font size (px)\",\n                \"type\": \"number\",\n                \"default\": \"50\"\n            },\n            \"textColor\": {\n                \"type\": \"string\",\n                \"title\": \"Text color\",\n                \"default\": \"rgb(35, 35, 35)\"\n            },\n            \"sparklineHeight\": {\n                \"title\": \"Sparkline height (px)\",\n                \"type\": \"number\",\n                \"default\": \"40\"\n            },\n            \"sparklineWidth\": {\n                \"title\": \"Sparkline width (%)\",\n                \"type\": \"number\",\n                \"default\": \"30\"\n            },\n            \"sparklineColor\": {\n                \"type\": \"string\",\n                \"title\": \"Sparkline color\",\n                \"default\": \"rgb(35, 35, 35)\"\n            }\n        },\n        \"required\": [\"textFontSize\", \"textColor\", \"sparklineHeight\", \"sparklineWidth\", \"sparklineColor\"]\n    },\n    \"form\": [\n        \"textFontSize\",\n        {\n            \"key\": \"textColor\",\n            \"type\": \"color\"\n        },\n        \"sparklineHeight\",\n        \"sparklineWidth\",\n        {\n            \"key\": \"sparklineColor\",\n            \"type\": \"color\"\n        }\n    ]\n}\n",
    "dataKeySettingsSchema": "{}\n",
    "defaultConfig": "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Sin\",\"color\":\"rgb(67, 160, 71)\",\"settings\":{},\"_hash\":0.30645013652674824,\"funcBody\":\"return Math.round(1000*Math.sin(time/5000));\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#ffffff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"16px\",\"settings\":{\"textFontSize\":50,\"sparklineHeight\":40,\"textColor\":\"#232323\",\"sparklineWidth\":30,\"sparklineColor\":\"#232323\"},\"title\":\"Card-Sparkline-V1\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"units\":\"Â°C\",\"decimals\":0,\"useDashboardTimewindow\":true,\"showLegend\":false,\"widgetStyle\":{},\"actions\":{\"headerButton\":[]},\"showTitleIcon\":false,\"titleIcon\":\"more_horiz\",\"iconColor\":\"rgba(0, 0, 0, 0.87)\",\"iconSize\":\"24px\",\"titleTooltip\":\"\",\"displayTimewindow\":true}"
  }
}